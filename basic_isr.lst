0000              1   ; ISR_example.asm: a) Increments/decrements a BCD variable every half second using
0000              2   ; an ISR for timer 2; b) Generates a 2kHz square wave at pin P1.7 using
0000              3   ; an ISR for timer 0; and c) in the 'main' loop it displays the variable
0000              4   ; incremented/decremented using the ISR for timer 2 on the LCD.  Also resets it to 
0000              5   ; zero if the 'CLEAR' push button connected to P1.5 is pressed.
                  7   $LIST
0000              9   
0000             10   ;  N76E003 pinout:
0000             11   ;                               -------
0000             12   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000             13   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000             14   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             15   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             16   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             17   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             18   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             19   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             20   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             21   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             22   ;                               -------
0000             23   ;
0000             24   
0000             25   CLK           EQU 16000000 ; Microcontroller system frequency in Hz
0000             26   TIMER0_RATE   EQU 16384     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000             27   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             28   FREQ_CONST         EQU 65536 / TIMER0_RATE
0000             29   
0000             30   
0000             31   SOUND_OUT     equ P1.7
0000             32   
0000             33   cseg
0000             34   
0000             35   ; Reset vector
0000             36   org 0x0000
0000 023878      37       ljmp main
0003             38   
0003             39   ; External interrupt 0 vector (not used in this code)
0003             40   org 0x0003
0003 32          41            reti
0004             42   
0004             43   ; Timer/Counter 0 overflow interrupt vector
000B             44   org 0x000B
000B 02386A      45            ljmp Timer0_ISR
000E             46   
000E             47   ; External interrupt 1 vector (not used in this code)
0013             48   org 0x0013
0013 32          49            reti
0014             50   
0014             51   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             52   org 0x001B
001B 32          53            reti
001C             54   
001C             55   ; Serial port receive/transmit interrupt vector (not used in this code)
0023             56   org 0x0023 
0023 32          57            reti
0024             58            
0024             59   ; Timer/Counter 2 overflow interrupt vector
002B             60   org 0x002B
002B 32          61            reti
002C             62   
002C             63   
002C             64   
                 67    $LIST
3847             69   
3847             70   WaitHalfSec:
3847 7A64        71            mov R2, #100
3849 79C8        72   Ll3: mov R1, #200
384B 7868        73   Ll2: mov R0, #104
384D D8FE        74   Ll1: djnz R0, Ll1 ; 4 cycles->4*60.285ns*104=25us
384F D9FA        75            djnz R1, Ll2 ; 25us*200=5.0ms
3851 DAF6        76            djnz R2, Ll3 ; 5.0ms*100=0.5s (approximately)
3853 22          77            ret
3854             78   
3854             79   
3854             80   ;---------------------------------;
3854             81   ; Routine to initialize the ISR   ;
3854             82   ; for timer 0                     ;
3854             83   ;---------------------------------;
3854             84   Timer0_Init:
3854 438E08      85            orl CKCON, #0b00001000 ; Input for timer 0 is sysclk/1
3857 E589        86            mov a, TMOD
3859 54F0        87            anl a, #0xf0 ; 11110000 Clear the bits for timer 0
385B 4401        88            orl a, #0x01 ; 00000001 Configure timer 0 as 16-timer
385D F589        89            mov TMOD, a
385F 758CFC      90            mov TH0, #high(TIMER0_RELOAD)
3862 758A30      91            mov TL0, #low(TIMER0_RELOAD)
3865             92            ; Enable the timer and interrupts
3865 D2A9        93       setb ET0  ; Enable timer 0 interrupt
3867 D28C        94       setb TR0  ; Start timer 0
3869 22          95            ret
386A             96   
386A             97   ;---------------------------------;
386A             98   ; ISR for timer 0.  Set to execute;
386A             99   ; every 1/4096Hz to generate a    ;
386A            100   ; 2048 Hz wave at pin SOUND_OUT   ;
386A            101   ;---------------------------------;
386A            102   Timer0_ISR:
386A            103            ;clr TF0  ; According to the data sheet this is done for us already.
386A            104            ; Timer 0 doesn't have 16-bit auto-reload, so
386A C28C       105            clr TR0
386C 758CFC     106            mov TH0, #high(TIMER0_RELOAD)
386F 758A30     107            mov TL0, #low(TIMER0_RELOAD)
3872 D28C       108            setb TR0
3874            109            
3874            110             
3874            111   ; cpl SOUND_OUT ; Connect speaker the pin assigned to 'SOUND_OUT'!
3874 120127     112            lcall NotesUpdate
3877 32         113            reti
3878            114   
3878            115   
3878            116   ;---------------------------------;
3878            117   ; Main program. Includes hardware ;
3878            118   ; initialization and 'forever'    ;
3878            119   ; loop.                           ;
3878            120   ;---------------------------------;
3878            121   main:
3878            122            ; Initialization
3878 75817F     123       mov SP, #0x7F
387B 75B100     124            mov P0M1, #0x00
387E 75B200     125       mov P0M2, #0x00
3881 75B300     126       mov P1M1, #0x00
3884 75B400     127       mov P1M2, #0x00
3887 75AD00     128       mov P3M2, #0x00
388A 75AD00     129       mov P3M2, #0x00
388D            130             
388D 123854     131       lcall Timer0_Init
3890            132   
3890            133   
3890            134   
3890            135            
3890            136            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3890 120168     137            lcall NotesInit
3893            138            
3893            139            ;setb P1.5
3893            140            
3893            141            ;lcall WaitHalfSec
3893            142            ;
3893            143            
3893 C295       144            clr P1.5
3895 123847     145            lcall WaitHalfSec
3898            146            
3898            147            
3898            148            
3898 7405       149            mov a, #5
389A 7A09       150            mov r2, #high(588 * FREQ_CONST)
389C 7B30       151            mov r3, #low(588 * FREQ_CONST)
389E            152            
389E            153            ;lcall NoteStart
389E            154            
389E 90018D     155            mov dptr, #music_data
38A1 12002C     156            lcall StartPlayingMusic
38A4            157            
38A4            158            
38A4            159            ; fout = tuning word * sample rate / 65535
38A4            160            ; tunnig word = 65536 * fout / sample rate
38A4            161            
38A4            162            
38A4 D2AF       163            setb EA   ; Enable Global interrupts
38A6            164            ; After initialization the program stays in this 'forever' loop
38A6            165   loop:
38A6            166            ; cpl P1.5
38A6 0238A6     167       ljmp loop
38A9            168   END
